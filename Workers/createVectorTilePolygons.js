/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.110
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as R}from"./chunk-YAEMR6BE.js";import{a as It}from"./chunk-T2JXMNUX.js";import{a as M}from"./chunk-6HPXDM4G.js";import{a as bt}from"./chunk-7QQVIQUI.js";import"./chunk-B5XY4KJS.js";import"./chunk-BXEYVAPQ.js";import"./chunk-AAT5S4I6.js";import"./chunk-S2GBLW2R.js";import{a as W}from"./chunk-7P3UWTUX.js";import"./chunk-VNH2ZAFU.js";import"./chunk-2YKWURU2.js";import{c as z}from"./chunk-TL76KVMB.js";import"./chunk-EK7K4JTS.js";import{a as o,b as nt,c as j}from"./chunk-TZVAMLG3.js";import{a as et}from"./chunk-7IOYEWZQ.js";import"./chunk-XE4KLUZ2.js";import"./chunk-TL6AL3PA.js";import"./chunk-DYKDQ7Q5.js";import"./chunk-57R6MEVR.js";import{e as A}from"./chunk-KNXNZS2Q.js";var kt=new o,Bt=new j,Nt=new z,E={min:void 0,max:void 0,indexBytesPerElement:void 0};function Pt(t){let e=new Float64Array(t),n=0;E.indexBytesPerElement=e[n++],E.min=e[n++],E.max=e[n++],o.unpack(e,n,kt),n+=o.packedLength,j.unpack(e,n,Bt),n+=j.packedLength,z.unpack(e,n,Nt)}function Tt(t){let e=t.length,n=0;for(let r=0;r<e;++r)n+=R.packedLength+3+t[r].batchIds.length;return n}function Ct(t,e,n){let r=e.length,o=2+r*M.packedLength+1+Tt(n),a=new Float64Array(o),i=0;a[i++]=t,a[i++]=r;for(let f=0;f<r;++f)M.pack(e[f],a,i),i+=M.packedLength;let s=n.length;a[i++]=s;for(let f=0;f<s;++f){let t=n[f];R.pack(t.color,a,i),i+=R.packedLength,a[i++]=t.offset,a[i++]=t.count;let e=t.batchIds,r=e.length;a[i++]=r;for(let n=0;n<r;++n)a[i++]=e[n]}return a}var yt=32767,wt=new o,Ht=new o,St=new o,Ut=new o,Ft=new o,Lt=new nt,Mt=new z;function Rt(t,e){let n;Pt(t.packedBuffer),n=2===E.indexBytesPerElement?new Uint16Array(t.indices):new Uint32Array(t.indices);let r=new Uint16Array(t.positions),a=new Uint32Array(t.counts),i=new Uint32Array(t.indexCounts),s=new Uint32Array(t.batchIds),f=new Uint32Array(t.batchTableColors),c=new Array(a.length),h=kt,l=Bt,u=Nt,m=E.min,p=E.max,d=t.minimumHeights,k=t.maximumHeights;A(d)&&A(k)&&(d=new Float32Array(d),k=new Float32Array(k));let g,I,w,b=r.length/2,y=r.subarray(0,b),N=r.subarray(b,2*b);bt.zigZagDeltaDecode(y,N);let T=new Float64Array(3*b);for(g=0;g<b;++g){let t=y[g],e=N[g],n=et.lerp(u.west,u.east,t/yt),r=et.lerp(u.south,u.north,e/yt),a=nt.fromRadians(n,r,0,Lt),i=l.cartographicToCartesian(a,wt);o.pack(i,T,3*g)}let L=a.length,j=new Array(L),x=new Array(L),U=0,S=0;for(g=0;g<L;++g)j[g]=U,x[g]=S,U+=a[g],S+=i[g];let B=new Float32Array(3*b*2),P=new Uint16Array(2*b),F=new Uint32Array(x.length),O=new Uint32Array(i.length),Y=[],V={};for(g=0;g<L;++g)w=f[g],A(V[w])?(V[w].positionLength+=a[g],V[w].indexLength+=i[g],V[w].batchIds.push(g)):V[w]={positionLength:a[g],indexLength:i[g],offset:0,indexOffset:0,batchIds:[g]};let G,K=0,Q=0;for(w in V)if(V.hasOwnProperty(w)){G=V[w],G.offset=K,G.indexOffset=Q;let t=2*G.positionLength,e=2*G.indexLength+6*G.positionLength;K+=t,Q+=e,G.indexLength=e}let X=[];for(w in V)V.hasOwnProperty(w)&&(G=V[w],X.push({color:R.fromRgba(parseInt(w)),offset:G.indexOffset,count:G.indexLength,batchIds:G.batchIds}));for(g=0;g<L;++g){w=f[g],G=V[w];let t=G.offset,e=3*t,r=t,b=j[g],y=a[g],E=s[g],N=m,L=p;A(d)&&A(k)&&(N=d[g],L=k[g]);let U=Number.POSITIVE_INFINITY,R=Number.NEGATIVE_INFINITY,S=Number.POSITIVE_INFINITY,K=Number.NEGATIVE_INFINITY;for(I=0;I<y;++I){let t=o.unpack(T,3*b+3*I,wt);l.scaleToGeodeticSurface(t,t);let n=l.cartesianToCartographic(t,Lt),a=n.latitude,i=n.longitude;U=Math.min(a,U),R=Math.max(a,R),S=Math.min(i,S),K=Math.max(i,K);let s=l.geodeticSurfaceNormal(t,Ht),f=o.multiplyByScalar(s,N,St),c=o.add(t,f,Ut);f=o.multiplyByScalar(s,L,f);let u=o.add(t,f,Ft);o.subtract(u,h,u),o.subtract(c,h,c),o.pack(u,B,e),o.pack(c,B,e+3),P[r]=E,P[r+1]=E,e+=6,r+=2}u=Mt,u.west=S,u.east=K,u.south=U,u.north=R,c[g]=M.fromRectangle(u,m,p,l);let Q=G.indexOffset,W=x[g],X=i[g];for(F[g]=Q,I=0;I<X;I+=3){let e=n[W+I]-b,r=n[W+I+1]-b,o=n[W+I+2]-b;Y[Q++]=2*e+t,Y[Q++]=2*r+t,Y[Q++]=2*o+t,Y[Q++]=2*o+1+t,Y[Q++]=2*r+1+t,Y[Q++]=2*e+1+t}for(I=0;I<y;++I){let e=I,n=(I+1)%y;Y[Q++]=2*e+1+t,Y[Q++]=2*n+t,Y[Q++]=2*e+t,Y[Q++]=2*e+1+t,Y[Q++]=2*n+1+t,Y[Q++]=2*n+t}G.offset+=2*y,G.indexOffset=Q,O[g]=Q-F[g]}Y=W.createTypedArray(B.length/3,Y);let _=X.length;for(let o=0;o<_;++o){let t=X[o].batchIds,e=0,n=t.length;for(let r=0;r<n;++r)e+=O[t[r]];X[o].count=e}let C=2===Y.BYTES_PER_ELEMENT?W.UNSIGNED_SHORT:W.UNSIGNED_INT,D=Ct(C,c,X);return e.push(B.buffer,Y.buffer,F.buffer,O.buffer,P.buffer,D.buffer),{positions:B.buffer,indices:Y.buffer,indexOffsets:F.buffer,indexCounts:O.buffer,batchIds:P.buffer,packedBuffer:D.buffer}}var Jt=It(Rt);export{Jt as default};